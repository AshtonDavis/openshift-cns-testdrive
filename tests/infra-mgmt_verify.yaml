---
- name: Verifying cluster scale, logging, metrics
  hosts: localhost
  become_user: root
  tasks:
    - name: Login as system:admin
      command: oc login -u system:admin

    - name: Check for additional node
      command: oc get node {{ item }}
      with_items:
        - "node04.internal.aws.testdrive.openshift.com"
        - "node05.internal.aws.testdrive.openshift.com"
        - "node06.internal.aws.testdrive.openshift.com"
      tags:
        - scaleup

    - name: Determine hawkular-cassandra rc
      shell: oc get rc -n openshift-infra | awk '/hawkular-cassandra*/{ print $1 }'
      register: hawkular_cassandra_rc
      tags:
        - metrics

    - name: Wait for Cassandra to be running
      command: oc get rc -n openshift-infra {{ hawkular_cassandra_rc.stdout }} -o jsonpath='{.status.availableReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - metrics

    - name: Wait for hawkular to be running
      command: oc get rc -n openshift-infra hawkular-metrics -o jsonpath='{.status.availableReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - metrics

    - name: Wait for heapster to be running
      command: oc get rc -n openshift-infra heapster -o jsonpath='{.status.availableReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - metrics

    - name: Determine elasticsearch dc
      shell: oc get dc -n logging | awk '/logging-es-*/{ print $1 }'
      register: logging_es_dc
      tags:
        - logging

    - name: Wait for elasticsearch to be running
      command: oc get dc -n logging {{ logging_es_dc.stdout }} -o jsonpath='{.status.readyReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - logging

    - name: Wait for curator to be running
      command: oc get dc -n logging logging-curator -o jsonpath='{.status.availableReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - logging

    - name: Wait for kibana to be running
      command: oc get dc -n logging logging-kibana -o jsonpath='{.status.availableReplicas}'
      register: result
      until: '"1" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - logging

    # This assumes that this test is being run after the cluster has been scaled
    - name: Wait for fluentd daemonset instances to be running
      command: oc get daemonset logging-fluentd -o jsonpath='{.status.numberReady}'
      register: result
      until: '"8" in result.stdout'
      retries: 2
      delay: 60
      tags:
        - logging
